 JavaScript offers several built in methods that each iterate over arrays in slightly different ways to achieve different results (such as every(), forEach(), map(), etc.), however the technique which is most flexible and offers us the greatest amount of control is a simple for loop.

PROMPT
=======
Modify the function, using a for loop, to return a filtered version of the passed array such that any array nested within arr containing elem has been removed.


function filteredArray(arr, elem) {
  let newArr = [];
  // Only change code below this line
  for (let i = 0;i<arr.length;i++) {
    if (arr[i].indexOf(elem) == -1) {
      newArr.push(arr[i]);
    }
  }
  // Only change code above this line
  return newArr;
}

console.log(filteredArray([[3, 2, 3], [1, 6, 3], [3, 13, 26], [19, 3, 9]], 3));
var myArray = [[1,2,3],[2,3,4]];
console.log(myArray[0][1]);